# ******************************************************************
# Cobbler managed dhcpd.conf file
#
# generated from cobbler dhcp.conf template ($date)
# Do NOT make changes to /etc/dhcpd.conf. Instead, make your changes
# in /etc/cobbler/dhcp.template, as /etc/dhcpd.conf will be
# overwritten.
#
# ******************************************************************

ddns-update-style interim;

allow booting;
allow bootp;

ignore client-updates;
set vendorclass = option vendor-class-identifier;

option pxe-system-type code 93 = unsigned integer 16;

# our subnets
<% @subnets.each do |subnet| %>
subnet <%= subnet[:addr] %> netmask <%= subnet[:mask] %> {
     <% if subnet[:gateway] %>
     option routers             <%= subnet[:gateway] %>;
     <% end %>
     class "pxeclients" {
         match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
          if option pxe-system-type = 00:02 {
                  filename "ia64/elilo.efi";
         } else if option pxe-system-type = 00:06 {
                  filename "grub/grub-x86.efi";
         } else if option pxe-system-type = 00:07 {
                  filename "grub/grub-x86_64.efi";
          } else {
                  filename "pxelinux.0";
          }
     }
}

<% end %>

# build target subnets -- hardcoded for now.  That will change.  Soon.
# XCV
subnet 172.21.113.0 netmask 255.255.255.0 { option routers 172.21.113.253; }
# NYX
subnet 172.18.235.0 netmask 255.255.255.0 { option routers 172.18.235.254; }
subnet 172.18.226.0 netmask 255.255.255.192 { option routers 172.18.226.60; }
# NJB
subnet 172.18.240.192 netmask 255.255.255.192 { option routers 172.18.240.252; }
subnet 172.18.240.64 netmask 255.255.255.192 { option routers 172.18.240.124; }
subnet 172.18.247.0 netmask 255.255.255.128 { option routers 172.18.247.124; }
# NQX
subnet 172.18.228.0 netmask 255.255.255.0 { option routers 172.18.228.252; }
subnet 172.18.227.128 netmask 255.255.255.224 { option routers 172.18.227.156; }
# SCX
subnet 172.18.229.0 netmask 255.255.255.0 { option routers 172.18.229.1; }
# SEC
subnet 172.18.241.0 netmask 255.255.255.0 { option routers 172.18.241.252; }
subnet 172.18.231.0 netmask 255.255.255.0 { option routers 172.18.231.253; }
subnet 172.18.232.0 netmask 255.255.255.192 { option routers 172.18.232.60; }
subnet 172.18.233.160 netmask 255.255.255.224 { option routers 172.18.233.188; }
#HDP
subnet 10.60.136.0 netmask 255.255.255.0 { option routers 10.60.136.253; }
#ILA
subnet 172.18.239.128 netmask 255.255.255.128 { option routers 172.18.239.254; }
subnet 172.18.238.224 netmask 255.255.255.224 { option routers 172.18.238.254; }

#for dhcp_tag in $dhcp_tags.keys():
    ## group could be subnet if your dhcp tags line up with your subnets
    ## or really any valid dhcpd.conf construct ... if you only use the
    ## default dhcp tag in cobbler, the group block can be deleted for a
    ## flat configuration
# group for Cobbler DHCP tag: $dhcp_tag
group {
        #for mac in $dhcp_tags[$dhcp_tag].keys():
            #set iface = $dhcp_tags[$dhcp_tag][$mac]
    host $iface.name {
        hardware ethernet $mac;
        #if $iface.ip_address:
        fixed-address $iface.ip_address;
        #end if
        #if $iface.hostname:
        option host-name "$iface.hostname";
        #end if
        #if $iface.netmask:
        option subnet-mask $iface.netmask;
        #end if
        #if $iface.gateway:
        option routers $iface.gateway;
        #end if
        #if $iface.enable_gpxe:
        if exists user-class and option user-class = "gPXE" {
            filename "http://$cobbler_server/cblr/svc/op/gpxe/system/$iface.owner";
        } else if exists user-class and option user-class = "iPXE" {
            filename "http://$cobbler_server/cblr/svc/op/gpxe/system/$iface.owner";
        } else {
            filename "undionly.kpxe";
        }
        #else
        filename "$iface.filename";
        #end if
        ## Cobbler defaults to $next_server, but some users
        ## may like to use $iface.system.server for proxied setups
        next-server $next_server;
        ## next-server $iface.next_server;
    }
        #end for
}
#end for

